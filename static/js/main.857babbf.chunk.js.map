{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Notification/Notification.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","addContact","reset","this","className","styles","form","onSubmit","formInput","type","placeholder","onChange","formButton","disabled","length","Component","ContactListItem","onRemove","contactsItem","contactsText","contactsButton","onClick","ContactList","contacts","TransitionGroup","component","map","CSSTransition","key","classNames","timeout","unmountOnExit","Filter","filter","Section","title","children","in","appear","section","Notification","alert","unmountOnEnter","notification","App","removeContact","updatedContacts","newName","toLowerCase","includes","setTimeout","getVisibleContacts","persistedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","contactsTitle","sectionText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.857babbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__i3BL2\",\"contactsItem\":\"ContactList_contactsItem__3TTDF\",\"contactsText\":\"ContactList_contactsText__vLX2Y\",\"contactsButton\":\"ContactList_contactsButton__1Awyl\",\"enter\":\"ContactList_enter__D3dvU\",\"enterActive\":\"ContactList_enterActive__3Ktrk\",\"exit\":\"ContactList_exit__1rglQ\",\"exitActive\":\"ContactList_exitActive__S_pH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1HoI2\",\"enter\":\"Notification_enter__3Wju-\",\"enterActive\":\"Notification_enterActive__EFzz1\",\"exit\":\"Notification_exit__3jHQy\",\"exitActive\":\"Notification_exitActive__ALnT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3nGYa\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from './ContactForm.module.css'\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className = {styles.form}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name:\r\n            <input\r\n            className ={styles.formInput}\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              placeholder=\"enter the name...\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Number:\r\n            <input\r\n            className ={styles.formInput}\r\n              type=\"tel\"\r\n              value={number}\r\n              name=\"number\"\r\n              placeholder=\"enter the number...\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button className ={styles.formButton} type=\"submit\" disabled={!name.length || !number.length}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => {\r\n  return (\r\n    \r\n    <li className={styles.contactsItem}>\r\n      <p className={styles.contactsText}>\r\n        {name} : {number}\r\n      </p>\r\n\r\n      <button\r\n        className={styles.contactsButton}\r\n        type=\"button\"\r\n        onClick={onRemove}\r\n      >\r\n        Ã—\r\n      </button>\r\n    </li>\r\n    \r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  return (\r\n    <div className={styles.contacts}>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map(({ id, name, number }) => (\r\n          <CSSTransition\r\n            key={id}\r\n            classNames={styles}\r\n            timeout={250}\r\n            unmountOnExit\r\n          >\r\n            <ContactListItem\r\n              key={id}\r\n              name={name}\r\n              number={number}\r\n              onRemove={() => onRemove(id)}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Filter.module.css'\r\n\r\n\r\nconst Filter = ({ onChange  }) => {\r\n  return (\r\n    <div className ={styles.filter}>\r\n      Find contacts by name:\r\n      <input type=\"text\" name=\"filter\" onChange ={onChange} />\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames={styles}\r\n        unmountOnExit\r\n      >\r\n        <h2 className={styles.section}>{title}</h2>\r\n      </CSSTransition>\r\n     {children}\r\n    </section>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ alert }) => {\r\n  return (\r\n    <CSSTransition\r\n    in={alert}\r\n    classNames={styles}\r\n    timeout={400}\r\n    unmountOnEnter\r\n    unmountOnExit\r\n    >\r\n      <div className={styles.notification}>\r\n        <p>Contact already exists!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Section from \"../Section/Section\";\r\nimport styles from \"../Section/Section.module.css\";\r\nimport \"./GlobalStyles.css\";\r\nimport Notification from \"../Notification/Notification\";\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n    alert: false,\r\n  };\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem(\"contacts\");\r\n\r\n    if (persistedContacts) {\r\n      this.setState({ contacts: JSON.parse(persistedContacts) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  removeContact = (id) => {\r\n    const { contacts } = this.state;\r\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\r\n    this.setState({\r\n      contacts: [...updatedContacts],\r\n    });\r\n  };\r\n\r\n  addContact = (contact) => {\r\n    const newName = contact.name;\r\n    const names = this.state.contacts.map((contact) =>\r\n      contact.name.toLowerCase()\r\n    );\r\n    if (names.includes(newName.toLowerCase())) {\r\n      this.setState({ alert: true });\r\n      setTimeout(() => {\r\n        this.setState({ alert: false });\r\n      }, 3000);\r\n    } else {\r\n      this.setState((state) => ({\r\n        contacts: [...state.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    if (contacts.length) {\r\n      return contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase())\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contacts, alert } = this.state;\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\" />\r\n        <Notification alert={alert} />\r\n        <ContactForm addContact={this.addContact} />\r\n        <div>\r\n          <h2 className={styles.contactsTitle}>Contacts</h2>\r\n          {contacts.length > 1 && <Filter onChange={this.handleChange} />}\r\n          {contacts.length ? (\r\n            <ContactList\r\n              contacts={this.getVisibleContacts()}\r\n              onRemove={this.removeContact}\r\n            />\r\n          ) : (\r\n            <p className={styles.sectionText}>There are no contacts here</p>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from  './components/App/App.js';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3CE4I\",\"sectionText\":\"Section_sectionText__25rBH\",\"appear\":\"Section_appear__3sHpd\",\"appearActive\":\"Section_appearActive__3KlkP\",\"contactsTitle\":\"Section_contactsTitle__3pkrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2eq62\",\"formInput\":\"ContactForm_formInput__2aA_l\",\"formButton\":\"ContactForm_formButton__3bj21\"};"],"sourceRoot":""}